<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zx.system.mapper.DrugMapper">

    <resultMap type="Drug" id="DrugResult">
        <id property="id" column="id"/>
        <result property="name" column="name"/>
        <result property="simpleCode" column="simple_code"/>
        <result property="specification" column="specification"/>
        <result property="manufacturerId" column="manufacturer_id"/>
        <result property="manufactureDate" column="manufacture_date"/>
        <result property="exp" column="exp"/>
        <result property="lot" column="lot"/>
        <result property="createBy" column="create_by"/>
        <result property="createTime" column="create_time"/>
        <result property="updateBy" column="update_by"/>
        <result property="updateTime" column="update_time"/>
    </resultMap>

    <sql id="selectVo">
        select id,
               name,
               simple_code,
               specification,
               manufacturer_id,
               manufacture_date,
               exp,
               lot,
               create_by,
               create_time
        from biz_drug
    </sql>

    <select id="findByParam" parameterType="Drug" resultMap="DrugResult">
        <include refid="selectVo"/>
        <where>
            <if test="name != null and name != ''">
                AND name like concat('%', #{name}, '%')
            </if>
            <if test="simpleCode != null and simpleCode != ''">
                AND simple_code = #{simpleCode}
            </if>
        </where>
    </select>

    <select id="searchAll" resultMap="DrugResult">
        <include refid="selectVo"/>
    </select>

    <select id="findById" parameterType="Integer" resultMap="DrugResult">
        <include refid="selectVo"/>
        where id = #{id}
    </select>

    <update id="update" parameterType="Drug">
        update biz_drug
        <set>
            <if test="name != null and name != ''">name = #{name},</if>
            <if test="simpleCode != null and simpleCode != ''">simple_code = #{simpleCode},</if>
            <if test="specification != null and specification != ''">specification = #{specification},</if>
            <if test="manufacturerId != null">manufacturer_id = #{manufacturerId},</if>
            <if test="manufactureDate != null">manufacture_date = #{manufactureDate},</if>
            <if test="exp != null">exp = #{exp},</if>
            <if test="lot != null">lot = #{lot},</if>
            <if test="updateBy != null and updateBy != ''">update_by = #{updateBy},</if>
            update_time = sysdate()
        </set>
        where id = #{id}
    </update>

    <insert id="create" parameterType="Drug" useGeneratedKeys="true" keyProperty="id">
        insert into biz_drug(
        name,
        simple_code,
        specification,
        manufacturer_id,
        manufacture_date,
        exp,
        lot,
        create_by,
        create_time
        )values(
        <if test="name != null and name != ''">#{name},</if>
        <if test="simpleCode != null and simpleCode != ''">#{simpleCode},</if>
        <if test="specification != null and specification != ''">#{specification},</if>
        <if test="manufacturerId != null">#{manufacturerId},</if>
        <if test="manufactureDate != null">#{manufactureDate},</if>
        <if test="exp != null">#{exp},</if>
        <if test="lot != null">#{lot},</if>
        <if test="createBy != null and createBy != ''">#{createBy},</if>
        sysdate()
        )
    </insert>

    <delete id="deleteByIds" parameterType="Integer">
        delete from biz_drug where id in
        <foreach collection="list" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>
</mapper> 